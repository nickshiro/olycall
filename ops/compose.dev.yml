services:
  redis:
    image: redis:7.2-alpine3.20
    container_name: oc-redis
    entrypoint: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping"]
      interval: 1s
      timeout: 1s
      retries: 10
    networks:
      - olycall
  postgres:
    image: postgres:17.2-alpine
    container_name: oc-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    # command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 5
    networks:
      - olycall
  migrate:
    image: olycall-server:latest
    container_name: oc-migrate
    depends_on:
      postgres:
        condition: service_healthy
    command: ["migrate", "--up", "--dsn", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@oc-postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"]
    restart: "no"
    networks:
      - olycall
  server:
    image: olycall-server:latest
    container_name: oc-server
    ports:
      - ${OC_SERVER_PORT}:${OC_SERVER_PORT}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: ["start"]
    stop_grace_period: 30s
    environment:
      - OC_SERVER_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@oc-postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
      - OC_SERVER_LOG_LEVEL=${OC_SERVER_LOG_LEVEL}
      - OC_SERVER_PORT=${OC_SERVER_PORT}
      - OC_SERVER_SECRET=${OC_SERVER_SECRET}
      - OC_SERVER_GOOGLE_OAUTH2_ID=${OC_SERVER_GOOGLE_OAUTH2_ID}
      - OC_SERVER_GOOGLE_OAUTH2_SECRET=${OC_SERVER_GOOGLE_OAUTH2_SECRET}
      - OC_SERVER_GOOGLE_OAUTH2_REDIRECT_URL=${OC_SERVER_GOOGLE_OAUTH2_REDIRECT_URL}
      - OC_SERVER_REDIS_HOST=oc-redis
      - OC_SERVER_REDIS_PORT=${REDIS_PORT}
      - OC_SERVER_REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - olycall
  nginx:
    image: nginx:1.27-alpine
    container_name: oc-nginx
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
    ports:
      - "80:80"
      - "443:443"
    command: nginx -g "daemon off;"
    networks:
      - olycall
networks:
  olycall:
    driver: bridge
